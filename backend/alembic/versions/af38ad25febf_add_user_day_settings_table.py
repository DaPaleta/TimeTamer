"""Add user day settings table

Revision ID: af38ad25febf
Revises: 
Create Date: 2025-07-06 07:16:32.856996

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'af38ad25febf'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_day_settings',
    sa.Column('setting_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('setting_type', sa.String(length=30), nullable=False),
    sa.Column('value', sa.JSON(), nullable=False),
    sa.Column('recurrence_pattern', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("setting_type IN ('work_environment', 'focus_slots', 'availability_slots')", name='valid_setting_type'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('setting_id')
    )
    op.create_index('idx_user_setting_type', 'user_day_settings', ['user_id', 'setting_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_user_setting_type', table_name='user_day_settings')
    op.drop_table('user_day_settings')
    # ### end Alembic commands ###
